<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprShredMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>sprShredMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 28;
healthpoints = healthpointsStart;

healthBarPrimaryColor[1] = 22;
healthBarSecondaryColor[1] = 52;

spriteStart = sprite_index
hasTriggeredFall = false;
bossTriggered = true;
image_speed = 0;
contactDamage = 6;
pose = sprShredPose
poseImgSpeed = 0.25
guardCancel = false
introType =1
grav = .24
customPose =false
hasTriggeredFall = false;
bossTriggered = true;
image_speed = 0;
contactDamage = 6;
ground = false;
timer = 0
phase= 0 
willDash = true
indexOffset = 0
shotCounts = 0
// Music
music = "Mega_Man_5GB.gbs";
musicType = "VGM";
musicTrackNumber = 5;

// Damage Table
enemyDamageValue(objBusterShot, 1);
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);
enemyDamageValue(objSonicWaveWeapon, 1)
enemyDamageValue(objForceField, 2)
enemyDamageValue(objNuclearDetonatorExplosion, 0)
enemyDamageValue(objBitCannon, 6)
enemyDamageValue(objSharkBoomerangDR, 2)
enemyDamageValue(objWaterShooter, 0)
enemyDamageValue(objOilStream, 2)
enemyDamageValue(objBladeLauncher, 0)
enemyDamageValue(objTorchArmProj, 1)
enemyDamageValue(objTorchArmHold, 2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// leave this. this is needed.
event_inherited();
if (!global.frozen)
{
    if (startIntro)
    {
        y = ystart
        canFillHealthBar = false;
        startIntro = false;
        isIntro = true;
        visible = true;
        calibrateDirection();
    }
    
    
}
if (entityCanStep())
{
    if (isFight)
    {
    
        if phase == 1 mask_index = sprite_index else mask_index = sprShredMask
        image_speed = 0;
        sprite_index = spriteStart;
        
        
            switch phase {
                case 0:
                    shotCounts = 0
                    calibrateDirection();
                    timer++
                    if timer == 1 {
                        
                        image_index = 0
                        willDash = choose(true,false)
                    }
                    if willDash {
                        if timer == 60 {
                            image_index = 1
                        }
                        if timer == 75 {
                            image_index = 2
                        }
                        if timer == 90 {
                            image_index = 3
                        }
                        if timer == 105 {
                            image_index = 4
                            timer = 0
                            phase = 1
                            willDash =  choose(true,false)
                        }
                    }
                    else {
                        if timer &gt; 60 {
                            willDash =choose(true,false)
                            phase = 2
                            timer = 0
                        }
                    }
                break
                case 1:
                    timer++
                    if timer % 10 == 0 {
                        indexOffset = !indexOffset
                        image_index = 4 + indexOffset
                        
                    }
                    xspeed = 4 * image_xscale
                    if place_meeting(x+xspeed,y,objSolid) || timer &gt; 60 {
                        xspeed = 0
                        calibrateDirection();
                        image_index = 1
                        timer = 0
                        phase = 2.75
                        shotCounts = 0
                    }
                break
                case 2:
                    timer++
                    if timer == 1 {
                        image_index = 6
                        calibrateDirection();
                        yspeed = -5
                        if instance_exists(objMegaman) {
                            xspeed = arcCalcXspeed(-5,grav,x,y,objMegaman.x,objMegaman.y)
                        }
                        else xspeed = image_xscale
                    }
                    if timer &gt; 2 &amp;&amp; ground {
                        image_index = 0
                        xspeed = 0
                        phase = 2.5
                        timer = 0
                        
                    }
                break
                case 2.5:
                    calibrateDirection();
                    sprite_index = sprShredPose
                    timer++
                    if timer % 5 == 0 image_index++
                    if image_index = image_number - 1 {
                        phase = 2.75
                        timer = 0
                        sprite_index = sprShredMan
                    }
                break
                case 2.75:
                    timer++
                    if timer &gt; 30 {
                        timer = 0
                        phase = 3
                        xspeed =0
                    }
                    image_index = 0
                break
                case 3:
                    calibrateDirection()
                    timer++
                    if timer == 1 {
                        image_index = 0
                        calibrateDirection()
                        
                    }
                    if timer == 10 {
                        shotCounts++
                        
                        image_index = image_number-1
                        with instance_create(x,y,objShredBlade) {
                            image_xscale = other.image_xscale
                            grav = 0
                        }
                        with instance_create(x,y,objShredBlade) {
                            image_xscale = other.image_xscale
                            grav = -0.05
                        }
                        with instance_create(x,y,objShredBlade) {
                            image_xscale = other.image_xscale
                            grav = -0.1
                        }
                        
                    }
                    if timer == 25 {
                        
                        phase = 0
                        timer = 0
                        image_index = 0
                    
                    }
                break
            }
            
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.guardCancel = guardCancel

if other.object_index == objNuclearDetonatorExplosion other.guardCancel = 1
if other.object_index == objWaterShooter other.guardCancel = 1
if other.object_index == objBladeLauncher other.guardCancel = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
