<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGunner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();


healthpointsStart = 3;
healthpoints = healthpointsStart;
contactDamage = 4;


facePlayer = true;

// Enemy specific code
shootTimer = 0;
shooting = false;
shootAmount = 0;

respawnRange = -16;
despawnRange = 16;

canShoot = false;
proximityCheck = 120;

enemyDamageValue(objSonicWaveWeapon, 1)
enemyDamageValue(objForceField, 0)
enemyDamageValue(objNuclearDetonatorExplosion, 1)
enemyDamageValue(objBitCannon, 1)
enemyDamageValue(objSharkBoomerangDR, 0)
enemyDamageValue(objWaterShooter, 0)
enemyDamageValue(objOilStream, 1)
enemyDamageValue(objBladeLauncher, 0)
enemyDamageValue(objTorchArmProj, 0)
enemyDamageValue(objTorchArmHold, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // Shooting
    if instance_exists(objMegaman) &amp;&amp; !canShoot {
        image_index = 0
        if distance_to_object(objMegaman) &lt;= proximityCheck {
            canShoot = true;
             shooting = true;
            shootTimer = 0;
        }
        
    }
    if canShoot {
        
    
    if (!shooting)
    {
        image_index = 0;
        shootTimer += 1;
        if (shootTimer &gt;= 60)
        {
            shooting = true;
            shootTimer = 0;
        }
    }
    else
    {
        image_index = 1;
        shootTimer += 1;
        if (shootTimer &gt;= 32)
        {
            if (shootAmount &lt; 1)
            {
                shootTimer = 0;
                i = instance_create(x + 6 * image_xscale, y - 9,
                    objEnemyBullet);
                i.xspeed = image_xscale * 2;
                playSFX(sfxEnemyShootClassic);
                shootAmount += 1;
            }
            if (shootAmount &gt;= 1)
            {
                shootTimer = 0;
                shootAmount = 0;
                shooting = false;
                
            }
        }
        }
    }
}
else if (dead)
{
    shootTimer = 0;
    shooting = true;
    shootAmount = 0;
    image_index = 1;
    yspeed = -3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_index == 0)
{
    if (collision_rectangle(x + 10 * image_xscale, y - 3,
        x + 12 * image_xscale, y - 20, other.id, false, false))
    {
        other.guardCancel = 1;
    }
}
if other.object_index == objForceField other.guardCancel = 1
if other.object_index == objSharkBoomerangDR other.guardCancel = 1
if other.object_index == objWaterShooter other.guardCancel = 1
if other.object_index == objBladeLauncher other.guardCancel = 1
if other.object_index == objTorchArmProj other.guardCancel = 1
if other.object_index == objTorchArmHold other.guardCancel = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
