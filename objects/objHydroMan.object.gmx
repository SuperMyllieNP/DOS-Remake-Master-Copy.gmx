<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHydroMan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtBoss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 28;
healthpoints = healthpointsStart;

healthBarPrimaryColor[1] = 22;
healthBarSecondaryColor[1] = 52;

spriteStart = sprite_index
hasTriggeredFall = false;
bossTriggered = true;
image_speed = 0;
contactDamage = 6;
pose = sprHydroPose
poseImgSpeed = 0.25
guardCancel = false
introType =1
grav = .24
customPose =false
hasTriggeredFall = false;
bossTriggered = true;
image_speed = 0;
contactDamage = 6;
ground = false;
timer = 0
phase= 0 
// Music
music = "Mega_Man_5GB.gbs";
musicType = "VGM";
musicTrackNumber = 5;

// Damage Table
enemyDamageValue(objBusterShot, 1);
enemyDamageValue(objBusterShotHalfCharged, 1);
enemyDamageValue(objBusterShotCharged, 3);

// MaGMML3
enemyDamageValue(objSparkChaser, 1);
enemyDamageValue(objLaserTrident, 2);
enemyDamageValue(objWaterShield, 4);
enemyDamageValue(objTornadoBlow, 1);
enemyDamageValue(objThunderBeam, 1);
enemyDamageValue(objMagneticShockwave, 4);
enemyDamageValue(objIceWall, 1);
enemyDamageValue(objBreakDash, 1);

// MaGMML2
enemyDamageValue(objHornetChaser, 1);
enemyDamageValue(objJewelSatellite, 2);
enemyDamageValue(objGrabBuster, 2);
enemyDamageValue(objTripleBlade, 1);
enemyDamageValue(objWheelCutter, 3);
enemyDamageValue(objSlashClaw, 4);
enemyDamageValue(objSakugarne, 2);
enemyDamageValue(objSuperArrow, 2);
enemyDamageValue(objWireAdapter, 3);

// MaGMML1
enemyDamageValue(objMetalBlade, 1);
enemyDamageValue(objGeminiLaser, 1);
enemyDamageValue(objSolarBlaze, 4);
enemyDamageValue(objTopSpin, 1);
enemyDamageValue(objThunderWool, 2);
enemyDamageValue(objPharaohShot, 2);
enemyDamageValue(objBlackHoleBomb, 1);
enemyDamageValue(objMagicCard, 2);

// MaG48HMML
enemyDamageValue(objFlameMixer, 4);
enemyDamageValue(objRainFlush, 2);
enemyDamageValue(objSparkShock, 2);
enemyDamageValue(objSearchSnake, 1);
enemyDamageValue(objTenguBlade, 2);
enemyDamageValue(objTenguDash, 2);
enemyDamageValue(objTenguDisk, 2);
enemyDamageValue(objSaltWater, 2);
enemyDamageValue(objConcreteShot, 1);
enemyDamageValue(objHomingSniper, 1);

// MaG24HMML
enemyDamageValue(objSuperArmBlockProjectile, 1);
enemyDamageValue(objSuperArmDebris, 1);
enemyDamageValue(objChillShot, 0);
enemyDamageValue(objChillSpikeLanded, 0);

// Misc.
enemyDamageValue(objPowerStone, 1);
enemyDamageValue(objPlantBarrier, 2);
enemyDamageValue(objBrickWeapon, 1);
enemyDamageValue(objIceSlasher, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// leave this. this is needed.
event_inherited();
if (!global.frozen)
{
    if (startIntro)
    {
        y = ystart
        canFillHealthBar = false;
        startIntro = false;
        isIntro = true;
        visible = true;
        calibrateDirection();
    }
    
    
}
if (entityCanStep())
{
    if (isFight)
    {
    
        image_speed = 0;
        sprite_index = spriteStart;
        var box;
        if image_xscale == -1 box = bbox_left
        else box = bbox_right
        
            switch phase {
                case 0:
                    image_index = 0
                    timer++
                    if timer &gt; 50 &amp;&amp; ground{
                        timer = 0
                        if place_meeting(x+10 * image_xscale,y,objSolid) {
                        phase = 4
                        }
                        else if instance_exists(objMegaman) &amp;&amp;distance_to_object(objMegaman) &lt; 16 {
                        phase = 5
                        calibrateDirection();
                        }
                        else phase = 1
                        
                    }
                break
                case 1:
                    timer++
                    if timer == 1 {
                        image_index = 3
                        xspeed = 1.5 * image_xscale
                        yspeed = -5
                    }
                    if yspeed &gt;= 0 &amp;&amp; timer &gt; 1 &amp;&amp; image_index = 3 {
                        yspeed = 0
                        timer = 0
                        phase = 2
                        xspeed = 0
                    }
                break
                case 2:
                    grav = 0
                    xspeed = 0
                    
                    yspeed = 0
                    timer++
                    if timer == 1 image_index = 4
                    if timer == 10 image_index = 5
                    if timer == 20 {
                    
                        image_index = 6
                        if image_xscale == 1 {
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+33,view_yview[0]+view_hview[0])
                            }
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+61,view_yview[0]+view_hview[0])
                            }
                            //
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+77,view_yview[0]+view_hview[0])
                            }
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+107,view_yview[0]+view_hview[0])
                            }
                            //
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+122,view_yview[0]+view_hview[0])
                            }
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+166,view_yview[0]+view_hview[0])
                            }
                            //
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+215,view_yview[0]+view_hview[0])
                            }
                        }
                        else {
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+223,view_yview[0]+view_hview[0])
                            }
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+196,view_yview[0]+view_hview[0])
                            }
                            //
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+180,view_yview[0]+view_hview[0])
                            }
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+150,view_yview[0]+view_hview[0])
                            }
                            //
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+135,view_yview[0]+view_hview[0])
                            }
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+82,view_yview[0]+view_hview[0])
                            }
                            //
                            with instance_create(x,y,objHydroWater) {
                                yspeed = -3
                                xspeed = arcCalcXspeed(-3,.25,x,y,view_xview[0]+33,view_yview[0]+view_hview[0])
                            }
                        
                        }
                    }
                    if timer == 30 image_index = 7
                    if timer == 40 {
                        image_index = 7
                        timer = 0
                        phase = 3
                        xspeed = 1.5 * image_xscale
                        
                    }
                break
                case 3:
                    grav = .24
                    image_index = 7
                    if ground {
                        xspeed = 0
                        image_index = 0
                        phase= 0
                        timer = 0
                    }
                break
                case 4:
                    xspeed=  0
                    timer++
                    if timer == 1 {
                        image_xscale *= -1
                        image_index = 1
                    }
                    if timer == 20 {
                        image_index = 2
                        with instance_create(box,y,objHydroBubble) image_xscale = other.image_xscale
                    }
                    if timer == 40 {
                        image_index = 0
                        phase = 0
                        timer = 0
                    }
                break
                case 5:
                
                    timer++
                    if timer == 10 image_index = 8
                    if timer == 20 image_index = 9
                    if timer == 30 image_index = 10
                    if timer == 40 image_index = 11
                    if timer == 50 {
                        image_index = 0
                        timer = 0
                        if place_meeting(x+6 * image_xscale,y,objSolid) {
                        phase = 4
                        global.hydroHit=  false
                        }
                        
                        else phase = 1
                    }
                break
                
            }
            
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.guardCancel = guardCancel

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
