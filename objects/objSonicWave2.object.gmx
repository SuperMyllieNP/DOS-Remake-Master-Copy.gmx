<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSonicManWave2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
contactDamage = 2;

stopOnFlash = false;
blockCollision = 1;
destroyTimer = 0;
respawn = false;

canStep = 0
alarm[0] = 1
angle = 0
spd = 2.5
ground = 0
bounceCount = 0
xspeed = 0
yspeed = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canStep = 1
if ((image_xscale == 1))
    angle = 0
else
    angle = 180
image_xscale = 1
while (place_meeting(x, y, objSolid))
    x -= image_xscale

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    
    xspeed = (cos(degtorad(angle)) * spd)
    yspeed = ((-sin(degtorad(angle))) * spd)
    if ((bounceCount &lt; 5))
    {
        var prevXspeed = xspeed
        var prevYspeed = yspeed
        generalCollision()
        var collideType = ""
        if ((yspeed == 0) &amp;&amp; (angle != 0) &amp;&amp; (angle != 180))
        {
            if ((ground == 1))
            {
                collideType = "floor"
                ground = 0
            }
            else
                collideType = "ceiling"
        }
        else if ((xspeed == 0))
            collideType = "wall"
        if ((collideType != ""))
        {
            switch collideType
            {
                case "floor":
                    if ((angle != 0) &amp;&amp; (angle != 180))
                    {
                        if ((prevXspeed &lt; 0))
                            angle = wrapAngle((angle - 90))
                        else
                            angle = wrapAngle((angle + 90))
                        bounceCount++
                        contactDamage++
                    }
                    break
                case "ceiling":
                    if ((angle != 0) &amp;&amp; (angle != 180))
                    {
                        if ((prevXspeed &lt; 0))
                            angle = wrapAngle((angle + 90))
                        else
                            angle = wrapAngle((angle - 90))
                        bounceCount++
                        contactDamage++
                    }
                    break
                case "wall":
                    bounceCount++
                    contactDamage++
                    if ((angle == 0))
                        angle = 135
                    else if ((angle == 180))
                        angle = 45
                    else if ((prevYspeed &gt; 0))
                    {
                        if ((prevXspeed &gt; 0))
                            angle = wrapAngle((angle - 90))
                        else
                            angle = wrapAngle((angle + 90))
                    }
                    else if ((prevXspeed &gt; 0))
                        angle = wrapAngle((angle + 90))
                    else
                        angle = wrapAngle((angle - 90))
                    break
            }

        }
    }
    else instance_destroy()
    if ((angle == 0) || (angle == 180)) {
        sprite_index = sprSonicManWave
       if angle == 180 image_xscale = -1 else image_xscale = 1
         }
    else
    {
        image_xscale = 1
        sprite_index = sprSonicManWaveRebound
        image_angle = wrapAngle((angle - 135))
    }
cooltext="directly based off of gemini lazer in mega man maker. :) - bazs"

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
