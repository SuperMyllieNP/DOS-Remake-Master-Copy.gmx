<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mskMegaman</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bulletLimitCost = 1;

contactDamage = 2;
inWater = -1;

penetrate = 3; // obviously we don't want to destroy the control for the dash
pierces = 2;
attackDelay = 8;
killOverride = true;

visible = 0;

shiftVisible = 3;
despawnRange = -1;

flashTimer = 0;
flashOffset = 0;

animTimer = 0;
animFrame = 0;

dashTimer = 20;
dashSpeed = 2.5;

breakDashLock = false;
topLock = 0;
spin = false;
bounce = 5;
canDash = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (instance_exists(parent))
{
    if !spin
    {
        breakDashLock = lockPoolRelease(breakDashLock);
    }
    topLock = lockPoolRelease(topLock);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if !spin
{

if (!instance_exists(parent))
{
    instance_destroy();
    exit;
}
else
{
    image_xscale = parent.image_xscale * 3;
    x = parent.x; // stay attached to MM
    y = parent.y;
    parent.hitTimer = 34;
}

if (!global.frozen)
{
    // iFrames fist/dash
    flashTimer += 1;
    if (flashTimer == 3)
    {
        flashOffset = !flashOffset;
        flashTimer = 0;
    }
    
    // real anim
    animTimer += 1;
    if (animTimer == 4)
    {
        animFrame += 2;
        if (animFrame &gt;= 6)
        {
            animFrame = 0;
        }
        animTimer = 0;
    }
    
    with (parent) // Mega Man anim + movement forcing
    {
            if (!other.breakDashLock)
            {
                other.breakDashLock = lockPoolLock(
                    localPlayerLock[PL_LOCK_MOVE],
                    localPlayerLock[PL_LOCK_SHOOT],
                    localPlayerLock[PL_LOCK_SLIDE],
                    localPlayerLock[PL_LOCK_GRAVITY],
                    localPlayerLock[PL_LOCK_TURN]);
                xspeed=0;
                yspeed=0;
                other.topLock = lockPoolLock(localPlayerLock[PL_LOCK_CLIMB],
                localPlayerLock[PL_LOCK_SLIDE]);
            }
            playerHandleSprites("Break");
            xspeed = other.dashSpeed * sign(other.image_xscale); // movement force
            yspeed = 0;
    }
    if(isLocked(global.playerLock[PL_LOCK_MOVE])&amp;&amp;
    isLocked(global.playerLock[PL_LOCK_TURN]))
    {
        dashTimer=0;
        with(parent)
            xspeed=0;
    }
    if parent.xcoll != 0
    {
        event_user(8);
    }
    // Destroy timer
    dashTimer -= 1;
    if (dashTimer &lt;= 0 || parent.xDir == -image_xscale)
    {
        xspeed = 0;
        instance_destroy();
    }
}
else if (global.switchingSections)
{
    with (parent)
    {
        playerHandleSprites("Break");
    }
}
}
else
{
    // check for parent
    if (!instance_exists(parent))
    {
        instance_destroy();
        exit;
    }
    
    image_xscale = parent.image_xscale * 1.2;
    image_yscale = parent.image_yscale * 2.2;
    
    x = parent.x - (1); // stay attached to MM
    y = parent.y - (1);
    parent.xspeed = parent.walkSpeed * parent.xDir;
    // real anim
    animTimer += 1;
    if (animTimer == 3)
    {
        animFrame += 1;
        if (animFrame &gt;= 4)
        {
            animFrame = 0;
        }
        animTimer = 0;
    }
    
    // Mega Man anim + movement forcing
    with (parent)
    {
        playerHandleSprites("Top");
        climbing = false;
    }
    
    if (parent.ground)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var chargeTime = 40; // Set charge time for this weapon
var initChargeTime = 20;

if ground
{
    readyTimer = 1;
}
// Shooting buster shots if not charged.
if (global.keyShootPressed[playerID] &amp;&amp; !playerIsLocked(PL_LOCK_SHOOT))
{
    if !instance_exists(objShoulderBash) &amp;&amp; readyTimer == 1
    {
        readyTimer = 0;
        a = instance_create(x, y, objShoulderBash);
        a.image_xscale = image_xscale;
        a.parent = id;
    }
    else
    {
        if readyTimer == 1
        {
        with (objShoulderBash)
        {
            if parent.id == other.id &amp;&amp; spin &amp;&amp; canDash
            {
                instance_destroy();
                with (parent)
                {                    
                    if !instance_exists(objShoulderBash)
                    {
                        a = instance_create(x, y, objShoulderBash);
                        a.image_xscale = image_xscale;
                        a.parent = id;
                    }
                }
            }
        }
        readyTimer = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="22">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>weaponSetup("WARIO BASH", make_color_rgb(188, 0, 188), make_color_rgb(240, 188, 60), sprWeaponIconsBreakDash);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(parent))
{
    if !spin
    {
        stopSFX(sfxEnemyHit);
        playSFX(sfxHoohooRock);
        spin = true;
        parent.yspeed = -5*parent.gravDir;
        lockPoolRelease(breakDashLock);
        animFrame = 0;
        animTimer = 0;
        attackDelay = 16;
        with (parent)
        {
            if xDir != image_xscale
            {
                shiftObject(-image_xscale*2,0,1);
            }
        }
        var box = parent.bbox_right*(image_xscale &gt; 0) + bbox_left*(image_xscale &lt; 0); 
        if parent.xcoll != 0
        {
            instance_create(box,parent.bbox_top - 8,objSlideDust);
            instance_create(box,parent.bbox_bottom + 8,objSlideDust);
        }
    }
    else
    {
        with (parent)
        {
            if (yspeed * gravDir &gt;= 0)
            {
                readyTimer = 1;
                yspeed = -(other.bounce) * gravDir;
            }
        }
        canDash = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
