<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDynaDynamite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

grav = 0;
contactDamage = 4;
reflectable = 0;
image_speed = 1 / 6;

stopOnFlash = false;

collectMe = false;
angle = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_xscale = 1
if (!global.frozen)
{
    if (collectMe)
    {
        if (image_index &lt; 2)
        {
            image_index = 2;
        }
        if (place_meeting(x, y, objDynaMan) &amp;&amp; yspeed &gt; 0)
        {
            instance_destroy();
        }
    }
    else
    {var imageAmount = (sprite_get_number(sprite_index) - 1)
    var angleOffset = 15
            if ((angle &gt;= (360 - angleOffset)) || (angle &lt; angleOffset))
        var refAngle = 0
    else if ((angle &gt;= angleOffset) &amp;&amp; (angle &lt; (45 + angleOffset)))
        refAngle = 45
    else if ((angle &gt;= (45 + angleOffset)) &amp;&amp; (angle &lt; (90 + angleOffset)))
        refAngle = 90
    else if ((angle &gt;= (90 + angleOffset)) &amp;&amp; (angle &lt; (135 + angleOffset)))
        refAngle = 135
    else if ((angle &gt;= (135 + angleOffset)) &amp;&amp; (angle &lt; (180 + angleOffset)))
        refAngle = 180
    else if ((angle &gt;= (180 + angleOffset)) &amp;&amp; (angle &lt; (225 + angleOffset)))
        refAngle = 225
    else if ((angle &gt;= (225 + angleOffset)) &amp;&amp; (angle &lt; (270 + angleOffset)))
        refAngle = 270
    else if ((angle &gt;= (270 + angleOffset)) &amp;&amp; (angle &lt; (315 + angleOffset)))
        refAngle = 315
    else
        refAngle = 0
    baseImage = (floor((refAngle / 45)) * 2)
    
    text="Thanks to mmm devs for this code:)"
    animImage =0
    
    image_index = (baseImage + animImage)
        if (xcoll != 0 || ycoll != 0)
        {
            expl = instance_create(x, y, objHarmfulExplosion);
            expl.contactDamage = 4;
            expl.stopOnFlash = false;
            expl.sprite_index = sprDynaExplosion
            playSFX(sfxDynaExplosion);
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
