<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTileAnimator</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>900000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>option = 1
imgSpd = 0.1
imgIndex = 0
selected = false
//stolen from megamix
global.livesRemaining = max(global.defaultLives, global.livesRemaining);

// save
saveLoadGame(true);
plot = 2; // where in the game are we? i'll set this later. 0: dos 1. 1: midstage 2: dos 3 intro. 3: dos 3. 4: fort
dos3Icon[0] = 0;
dos3Icon[1] = 0;
dos3Icon[2] = 0;
dos3Icon[3] = 0;
dos3Icon[4] = 0;
dos3Icon[5] = 0;
im = 0;
global.bossDefeated[0] = false
global.bossDefeated[1] = false
global.bossDefeated[2] = false
global.bossDefeated[3] = false
global.bossDefeated[4] = false
global.bossDefeated[5] = false
global.bossDefeated[6] = false
global.bossDefeated[7] = false
global.bossDefeated[8] = false
alarm[0] = 1
drawX = 0;
drawX2 = 0
phase =0;
bossTextTimer = 0;
bossTextTimerMax = 110;
bossTextIntervalTimer = 0
bossTextInterval = 7
bossTextPos = 0
bossDisplayName = ""
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch plot {
case 0:
playMusic("stageSelect.ogg","OGG",1,0,22*60,true,1)
option = 1
break
case 1:
option = 3
break
case 2:

case 3:
playMusic("stageSelect3.ogg","OGG",1,0,39*60,true,1)
option = 6
break
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (plot)
{
    case 0:
        switch (phase)
        {
            case 0:
                if (selected == false)
                {
                    var soundPlayed = false
                        ;
                    if (global.keyRightPressed[0])
                    {
                        switch (option)
                        {
                            case 0:
                                option = 1;
                                break;
                            case 1:
                                option = 2;
                                break;
                            case 2:
                                option = 0;
                                break;
                        }
                        
                        if (soundPlayed == false)
                        {
                            playSFX(sfxMenuMove);
                            soundPlayed = true;
                        }
                    }
                    else if (global.keyLeftPressed[0])
                    {
                        switch (option)
                        {
                            case 0:
                                option = 2;
                                break;
                            case 1:
                                option = 0;
                                break;
                            case 2:
                                option = 1;
                                break;
                        }
                        
                        if (soundPlayed == false)
                        {
                            playSFX(sfxMenuMove);
                            soundPlayed = true;
                        }
                    }
                    if (global.keyPausePressed[0] || global.keyJumpPressed[0])
                    {
                        playSFX(sfxMenuSelect);
                        switch (option)
                        {
                            case 0:
                                selected = true;
                                phase = 1;
                                boss = "sonic";
                                break;
                            case 1:
                                selected = true;
                                phase = 1;
                                boss = "volt";
                                break;
                            case 2:
                                selected = true;
                                phase = 1;
                                boss = "dyna";
                                break;
                        }
                    }
                }
                break;
            case 1:
                imgIndex++;
                
                if (imgIndex == 1)
                    playMusic("dos1Start.ogg", "OGG", 0, 0, 250 * 60, false, 1);
                drawX = -256;
                if (imgIndex &gt; 50)
                {
                    if (boss == "dyna")
                    {
                        if (im &lt; sprite_get_number(sprDynaManIntro) - 1)
                        {
                            im += .25;
                        }
                    }
                    if (boss == "volt")
                    {
                        if (im &lt; sprite_get_number(sprVoltIntro) - 1)
                        {
                            im += .8 / 60;
                        }
                    }
                    if (boss == "sonic")
                    {
                        im += 12 / 60;
                    }
                }
                if (imgIndex &gt; 9 * 60)
                {
                    switch (boss)
                    {
                        case "sonic":
                            global.nextRoom = rmSonicMan;
                            break;
                        case "dyna":
                            global.nextRoom = rmDynaMan;
                            break;
                        case "volt":
                            global.nextRoom = rmVoltMan;
                            break;
                    }
                }
                
                break;
        }
        break;
    case 1:
        switch (phase)
        {
            case 0:
                if (selected == false)
                {
                    var soundPlayed = false
                        ;
                    if (global.keyRightPressed[0])
                    {
                        switch (option)
                        {
                            case 0:
                                option = 1;
                                break;
                            case 1:
                                option = 2;
                                break;
                            case 2:
                                option = 3;
                                break;
                            case 3:
                                option = 0;
                                break;
                        }
                        
                        if (soundPlayed == false)
                        {
                            playSFX(sfxMenuMove);
                            soundPlayed = true;
                        }
                    }
                    else if (global.keyLeftPressed[0])
                    {
                        switch (option)
                        {
                            case 0:
                                option = 3;
                                break;
                            case 1:
                                option = 0;
                                break;
                            case 2:
                                option = 1;
                                break;
                            case 3:
                                option = 2;
                                break;
                        }
                        
                        if (soundPlayed == false)
                        {
                            playSFX(sfxMenuMove);
                            soundPlayed = true;
                        }
                    }
                    if (option == 3)
                    {
                        if (global.keyPausePressed[0] || global.keyJumpPressed[0])
                        {
                            playSFX(sfxMenuSelect);
                            selected = true;
                            phase = 1;
                            boss = "tox";
                        }
                    }
                }
                break;
            case 1:
                imgIndex++;
                
                
                drawX = -256;
                if (imgIndex &gt; 50)
                {
                    if (imgIndex == 75)
                        im = 1;
                    if (imgIndex == 80)
                        im = 9;
                    if (imgIndex == 90)
                        im = 8;
                }
                if (imgIndex &gt; 9 * 60)
                {
                    global.nextRoom = rmMidStage;
                }
                
                break;
        }
        break;
    case 2:
        break;
    case 3:
        switch (phase)
        {
            case 0:
                if (selected == false)
                {
                    var soundPlayed = false
                        ;
                    if (global.keyRightPressed[0])
                    {
                        switch (option)
                        {
                            case 0:
                                option = 6;
                                break;
                            case 1:
                                option = 2;
                                break;
                            case 2:
                                option = 3;
                                break;
                            case 3:
                                option = 4;
                                break;
                            case 4:
                                option = 5;
                                break;
                            case 5:
                                option = 0;
                                break;
                            case 6:
                                option = 1;
                                break;
                        }
                        
                        if (soundPlayed == false)
                        {
                            playSFX(sfxMenuMove);
                            soundPlayed = true;
                        }
                    }
                    else if (global.keyLeftPressed[0])
                    {
                        switch (option)
                        {
                            case 0:
                                option = 5;
                                break;
                            case 1:
                                option = 6;
                                break;
                            case 2:
                                option = 1;
                                break;
                            case 3:
                                option = 2;
                                break;
                            case 4:
                                option = 3;
                                break;
                            case 5:
                                option = 4;
                                break;
                            case 6:
                                option = 0;
                                break;
                        }
                        
                        if (soundPlayed == false)
                        {
                            playSFX(sfxMenuMove);
                            soundPlayed = true;
                        }
                    }
                    if (global.keyPausePressed[0] || global.keyJumpPressed[0]) &amp;&amp; !global.bossDefeated[option]
                    {
                        if option != 6 {
                        playSFX(sfxMenuSelect);
                        var i = option;
                        
                        switch (i)
                        {
                            case 0:
                                xx[i] = 61;
                                yy[i] = 24;
                                with instance_create(xx[i]+19,yy[i]+16,objDOS3Intro) {
                                    sprite_index = sprWeldJump
                                    image_speed =0 
                                    image_index = 1
                                }
                                break;
                            case 1:
                                xx[i] = 142;
                                yy[i] = 24;
                                with instance_create(xx[i]+19,yy[i]+16,objDOS3Intro) {
                                    sprite_index = sprBitMan
                                    image_speed =0 
                                    image_index = 1
                                }
                                break;
                            case 2:
                                xx[i] = 182;
                                yy[i] = 88;
                                with instance_create(xx[i]+19,yy[i]+16,objDOS3Intro) {
                                    sprite_index = sprSharkMan
                                    image_speed =0 
                                    image_index = 4
                                }
                                break;
                            case 3:
                                xx[i] = 144;
                                yy[i] = 153;
                                with instance_create(xx[i]+19,yy[i]+16,objDOS3Intro) {
                                    sprite_index = sprHydroMan
                                    image_speed =0 
                                    image_index = 3
                                }
                                break;
                            case 4:
                                xx[i] = 59;
                                yy[i] = 153;
                                with instance_create(xx[i]+19,yy[i]+16,objDOS3Intro) {
                                    sprite_index = sprPetrolMan
                                    image_speed =0
                                    image_index = 4
                                }
                                break;
                            case 5:
                                xx[i] = 22;
                                yy[i] = 88;
                                with instance_create(xx[i]+16,yy[i]+16,objDOS3Intro) {
                                    sprite_index = sprShredMan
                                    image_speed =0 
                                    image_index = 0
                                }
                                break;
                        }
                        switch (option)
                        {
                            case 0:
                                selected = true;
                                phase = 1;
                                boss = "weld";
                                break;
                            case 1:
                                selected = true;
                                phase = 1;
                                boss = "bit";
                                break;
                            case 2:
                                selected = true;
                                phase = 1;
                                boss = "shark";
                                break;
                            case 3:
                                selected = true;
                                phase = 1;
                                boss = "hydro";
                                break;
                            case 4:
                                selected = true;
                                phase = 1;
                                boss = "petrol";
                                break;
                            case 5:
                                selected = true;
                                phase = 1;
                                boss = "shred";
                                break;
                        }
                        }
                    }
                }
                
                imgIndex += imgSpd
                if (imgIndex &gt;= 2)
                    imgIndex -= 2

                break;
            case 1:
            imgIndex =0
            break
            case 2:
                if !instance_exists(objDOS3Intro) {
                imgIndex++; //repourpouse the variable as a timer
                drawX = -256;
                if (imgIndex == 1)
                    playMusic("dos3Start.ogg", "OGG", 0, 0, 250 * 60, false, 1);
                
                if (imgIndex &gt; 50)
                {
                    if (boss == "weld")
                    {
                        if (im &lt; sprite_get_number(sprWeldPose) - 1)
                        {
                            im += 0.1538461538;
                        }
                    }
                    if (boss == "petrol")
                    {
                        if (im &lt; sprite_get_number(sprPetrolPose) - 1)
                        {
                            im += 0.25;
                        }
                    }
                    if (boss == "shred")
                    {
                        if (im &lt; sprite_get_number(sprShredPose) - 1)
                        {
                            im += 0.25;
                        }
                    }
                    if (boss == "hydro")
                    {
                        if (im &lt; sprite_get_number(sprHydroPose) - 1)
                        {
                            im += 0.25;
                        }
                    }
                    if (boss == "bit")
                    {
                        if (im &lt; sprite_get_number(sprBitPose) - 1)
                        {
                            im += 0.25;
                        }
                    }
                    if (boss == "shark")
                    {
                        im = 0;
                    }
                }
                if (imgIndex &gt; 9 * 60)
                {
                    switch (boss)
                    {
                        case "shark":
                            global.nextRoom = lvlSharkTest;
                            break;
                        case "weld":
                            global.nextRoom = rmWeldMan;
                            break;
                        case "hydro":
                            global.nextRoom = rmHydroMan;
                            break;
                        case "bit":
                            global.nextRoom = rmVoltMan;
                            break;
                        case "shred":
                            global.nextRoom = rmVoltMan;
                            break;
                        case "petrol":
                            global.nextRoom = lvlPetrolRoom;
                            break;
                    }
                }
                }
                break;
        }
        break;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center)
if (plot != 2)
{
    draw_sprite(sprStageSelect, plot, drawX, 0);
    if plot == 3 &amp;&amp; phase != 1 || plot != 3 
    draw_sprite(sprBossIntroduction, plot, drawX + 256, 0);
    else draw_sprite(sprBossIntroduction, plot, 0, 0);
}
else
{
    if (phase == 0)
    {
        draw_sprite_part(sprStageSelect, 1, 0, 0, 256, 87, drawX, 0);
        draw_sprite_part(sprStageSelect, 1, 0, 87, 256, 65, drawX2, 87);
        draw_sprite_part(sprStageSelect, 1, 0, 152, 256, 72, drawX, 152);
        drawX += 10;
        drawX2 -= 10;
        if (drawX &gt;= 350)
        {
            drawX = 350;
            drawX2 = -350;
            phase = 1;
        }
    }
    if (phase == 1)
    {
        draw_sprite_part(sprStageSelect, 2, 0, 0, 256, 87, drawX, 0);
        draw_sprite_part(sprStageSelect, 2, 0, 87, 256, 65, drawX2, 87);
        draw_sprite_part(sprStageSelect, 2, 0, 152, 256, 72, drawX, 152);
        drawX -= 10;
        drawX2 += 10;
        if (drawX &lt;= 0)
        {
            drawX = 0;
            drawX2 = 0;
            imgIndex++;
            
            if (imgIndex &gt; 25)
            {
                phase = 0;
                plot = 3;
                drawX = 0;
                drawX2 = 0;
            }
        }
    }
}
if (plot == 0)
{
    if (phase == 0)
    {
        for (var i = 0; i &lt;= 2; i += 1)
        {
            switch (i)
            {
                case 0:
                    xx[i] = 31;
                    yy[i] = 96;
                    break;
                case 1:
                    xx[i] = 112;
                    yy[i] = 32;
                    break;
                case 2:
                    xx[i] = 191;
                    yy[i] = 96;
                    break;
            }
            
            draw_sprite(sprMugshots, i, xx[i] + drawX, yy[i]);
        }
        draw_sprite(sprMegamanStageselect, option, 112 + drawX, 96);
    }
    else
    {
        if (imgIndex &lt; 50)
        {
            switch (boss)
            {
                case "volt":
                    bossDisplayNameF = "VOLT MAN";
                    draw_sprite(sprVolt2Idle, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
                case "dyna":
                    bossDisplayNameF = "DYNA MAN";
                    draw_sprite(sprDynaManIntro, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
                case "sonic":
                    bossDisplayNameF = "SONIC MAN";
                    draw_sprite(sprSonicPose, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
            }
        }
        else
        {
            if (bossTextTimer &lt; bossTextTimerMax)
                bossTextTimer += 1;
            else if (bossTextPos &lt; string_length(bossDisplayNameF))
            {
                bossTextIntervalTimer += 1;
                if (bossTextIntervalTimer &gt;= bossTextInterval)
                {
                    bossTextIntervalTimer = 0;
                    bossTextPos += 1;
                    bossDisplayName = string_copy(bossDisplayNameF, 0, bossTextPos);
                }
            }
            switch (boss)
            {
                case "volt":
                    draw_sprite(sprVolt2Intro, im, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    draw_text(256 / 2, 136, bossDisplayName);
                    break;
                case "dyna":
                    draw_text(256 / 2, 136, bossDisplayName);
                    draw_sprite(sprDynaManIntro, im, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
                case "sonic":
                    if (im &lt; 3)
                        draw_sprite(sprSonicPose, im, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    else
                        draw_sprite(sprSonicMan, 2, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    draw_text(256 / 2, 136, bossDisplayName);
                    break;
            }
        }
    }
}
else if (plot == 1)
{
    if (phase == 0)
    {
        for (var i = 0; i &lt;= 3; i += 1)
        {
            switch (i)
            {
                case 0:
                    xx[i] = 31;
                    yy[i] = 96;
                    break;
                case 1:
                    xx[i] = 112;
                    yy[i] = 32;
                    break;
                case 2:
                    xx[i] = 191;
                    yy[i] = 96;
                    break;
                case 3:
                    xx[i] = 112;
                    yy[i] = 160;
                    break;
            }
            
            draw_sprite(sprMugshots, 3, 112 + drawX, 160);
        }
        draw_sprite(sprMegamanStageselect, option, 112 + drawX, 96);
    }
    else
    {
        if (imgIndex &lt; 50)
        {
            switch (boss)
            {
                case "tox":
                    bossDisplayNameF = "TOX MAN";
                    draw_sprite(sprToxMan, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
            }
        }
        else
        {
            if (bossTextTimer &lt; bossTextTimerMax)
                bossTextTimer += 1;
            else if (bossTextPos &lt; string_length(bossDisplayNameF))
            {
                bossTextIntervalTimer += 1;
                if (bossTextIntervalTimer &gt;= bossTextInterval)
                {
                    bossTextIntervalTimer = 0;
                    bossTextPos += 1;
                    bossDisplayName = string_copy(bossDisplayNameF, 0, bossTextPos);
                }
            }
            switch (boss)
            {
                case "tox":
                    draw_sprite(sprToxMan, im, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    draw_text(256 / 2, 136, bossDisplayName);
                    break;
            }
        }
    }
}
else if (plot == 3) // plot 2 is handled earlier
{
    if (phase == 0)
    {
        for (var i = 0; i &lt;= 6; i += 1)
        {
            switch (i)
            {
                case 0:
                    xx[i] = 61;
                    yy[i] = 24;
                    break;
                case 1:
                    xx[i] = 142;
                    yy[i] = 24;
                    break;
                case 2:
                    xx[i] = 182;
                    yy[i] = 88;
                    break;
                case 3:
                    xx[i] = 144;
                    yy[i] = 153;
                    break;
                case 4:
                    xx[i] = 59;
                    yy[i] = 153;
                    break;
                case 5:
                    xx[i] = 22;
                    yy[i] = 88;
                    break;
                case 6:
                    xx[i] = 102;
                    yy[i] = 88;
                    break;
            }
            var d = global
                .bossDefeated[i];
            if i != 6 {
            if (d == false)
            {
                if (option == i)
                {
                    draw_sprite(sprMM3Border, imgIndex, xx[i] , yy[i] );
                }
                else
                {
                    draw_sprite(sprMM3Border, 0, xx[i] , yy[i] );
                }
            }
            else
            {
                if (option == i)
                {
                    draw_sprite(sprMM3BorderDead, imgIndex, xx[i] , yy[i] );
                }
                else
                {
                    draw_sprite(sprMM3BorderDead, 0, xx[i] , yy[i] );
                }
            }
            }
            else {
                if (option == i)
                {
                    draw_sprite(sprMM3Border, imgIndex, xx[i], yy[i]);
                }
                else
                {
                    draw_sprite(sprMM3Border, 0, xx[i], yy[i]);
                }
            }
            if (!d)
                draw_sprite(sprDOS3Mugs, i, xx[i] + 9+drawX, yy[i]+8);
        }
        
        draw_sprite(sprMegaman3Stageselect, option, 111 + drawX, 96);
    }
    else if phase == 1 {
        draw_sprite_part(sprStageSelect, plot, 0, 0, 256, 87, drawX, 0);
        draw_sprite_part(sprStageSelect, plot, 0, 87, 256, 65, drawX2, 87);
        draw_sprite_part(sprStageSelect, plot, 0, 152, 256, 72, drawX, 152);
        drawX += 10;
        drawX2 -= 10;
        if (drawX &gt;= 350)
        {
            drawX = -256;
            drawX2 = 256;
            phase = 2;
        }
    }
    else if phase == 2
    {
        
        if (imgIndex &lt; 50) &amp;&amp; !instance_exists(objDOS3Intro)
        {
            switch (boss)
            {
                case "shred":
                    bossDisplayNameF = "SHRED MAN";
                    draw_sprite(sprShredMan, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
                case "bit":
                    bossDisplayNameF = "BIT MAN";
                    draw_sprite(sprBitMan, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
                case "petrol":
                    bossDisplayNameF = "PETROL MAN";
                    draw_sprite(sprPetrolMan, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
                case "weld":
                    bossDisplayNameF = "WELD MAN";
                    draw_sprite(sprWeldMan, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
                case "shark":
                    bossDisplayNameF = "SHARK MAN";
                    draw_sprite(sprSharkMan, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
                case "hydro":
                    bossDisplayNameF = "HYDRO MAN";
                    draw_sprite(sprHydroMan, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 4 - 5));
                    break;
            }
        }
        else if !instance_exists(objDOS3Intro)
        {
            if (bossTextTimer &lt; bossTextTimerMax)
                bossTextTimer += 1;
            else if (bossTextPos &lt; string_length(bossDisplayNameF))
            {
                bossTextIntervalTimer += 1;
                if (bossTextIntervalTimer &gt;= bossTextInterval)
                {
                    bossTextIntervalTimer = 0;
                    bossTextPos += 1;
                    bossDisplayName = string_copy(bossDisplayNameF, 0, bossTextPos);
                }
            }
            
            switch (boss)
            {
                case "shark":
                    draw_sprite(sprSharkPose, 0, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 9));
                    draw_text(256 / 2, 132, bossDisplayName);
                    break;
                case "bit":
                    
                    draw_text(256 / 2, 132, bossDisplayName);
                    draw_sprite(sprBitPose, im, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 9));
                    break;
                case "petrol":
                    draw_sprite(sprPetrolPose, im, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 9));
                    draw_text(256 / 2, 132, bossDisplayName);
                    break;
                case "weld":
                    draw_sprite(sprWeldPose, im, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 9));
                    draw_text(256 / 2, 132, bossDisplayName);
                    break;
                case "hydro":
                    draw_sprite(sprHydroPose, im, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 9));
                    draw_text(256 / 2, 132, bossDisplayName);
                    break;
                case "shred":
                    draw_sprite(sprShredPose, im, view_xview[0] + view_wview[0] / 2, view_yview[0] + ((round(view_hview[0] / 2)) - 9));
                    draw_text(256 / 2, 132, bossDisplayName);
                    break;
            }
        }
    }
}
draw_set_halign(fa_left)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
